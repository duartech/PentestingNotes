NMAP: 
	Global search.	
	tcp
	udp
	
	Only SYN flag.
	SYN flag is set. The rest of the bits are not important.
	tcp.flags == 2
	tcp.flags.syn == 1
	
	Only ACK flag.
	ACK flag is set. The rest of the bits are not important.
	tcp.flags == 16
	tcp.flags.ack == 1
	
	Only SYN, ACK flags.
	SYN and ACK are set. The rest of the bits are not important.
	tcp.flags == 18
	(tcp.flags.syn == 1) and (tcp.flags.ack == 1)
	
	Only RST flag.
	RST flag is set. The rest of the bits are not important.
	tcp.flags == 4
	tcp.flags.reset == 1
	
	Only RST, ACK flags.
	RST and ACK are set. The rest of the bits are not important.
	tcp.flags == 20
	(tcp.flags.reset == 1) and (tcp.flags.ack == 1)
	
	Only FIN flag
	FIN flag is set. The rest of the bits are not important.
	tcp.flags == 1
	tcp.flags.fin == 1
	
	
TCP SYN:
	tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size <= 1024
	
UDP Scan Patterns:
	icmp.type==3 and icmp.code==3     

ARP:
	arp.opcode == 1
	arp.opcode == 2
	arp.dst.hw_mac==00:00:00:00:00:00
	arp.duplicate-address-detected or arp.duplicate-address-frame
	((arp) && (arp.opcode == 1)) && (arp.src.hw_mac == target-mac-address)
	
DHCP:
	Request: dhcp.option.dhcp == 3
	ACK: dhcp.option.dhcp == 5
	NAK: dhcp.option.dhcp == 6
	dhcp.option.hostname contains "keyword"
	dhcp.option.domain_name contains "keyword"

NetBios
	nbns
	nbns.name contains "keyword"

Kerberos
	kerberos
	kerberos.CNameString contains "keyword" 
	kerberos.CNameString and !(kerberos.CNameString contains "$" )
	kerberos.pvno == 5
	kerberos.realm contains ".org" 
	kerberos.SNameString == "krbtg"

Tunnelling Traffic: ICMP and DNS 
	icmp
	data.len > 64 and icmp

DNS
	dns contains "dnscat"
	dns.qry.name.len > 15 and !mdns

FTP
	ftp
	ftp.response.code == <code> 
	ftp.request.command == "<command>"
	(ftp.response.code == 530) and (ftp.response.arg contains "username")
	(ftp.request.command == "PASS" ) and (ftp.request.arg == "password")
	
	CODES:
	211: System status.
	212: Directory status.
	213: File status
	220: Service ready.
	227: Entering passive mode.
	228: Long passive mode.
	229: Extended passive mode.
	230: User login.
	231: User logout.
	331: Valid username.
	430: Invalid username or password
	530: No login, invalid password.
	
	COMMANDS:
	USER: Username.
	PASS: Password.
	CWD: Current work directory.
	LIST: List

HTTP
	http
	http2
	http.request.method == "GET"
	http.request.method == "POST"
	http.request
	http.response.code == <code>
	http.user_agent contains "nmap"
	http.request.uri contains "admin"
	http.request.full_uri contains "admin"
	http.server contains "apache"
	http.host contains "keyword"
	http.host == "keyword"
	http.connection == "Keep-Alive"
	data-text-lines contains "keyword"
	http.user_agent
	(http.user_agent contains "sqlmap") or (http.user_agent contains "Nmap") or (http.user_agent contains "Wfuzz") or (http.user_agent contains "Nikto")
	
LOG4J
	http.request.method == "POST"
	(ip contains "jndi") or ( ip contains "Exploit")
	(frame contains "jndi") or ( frame contains "Exploit")
	(http.user_agent contains "$") or (http.user_agent contains "==")
	
	
HTTPS
	http.request
	tls
	tls.handshake.type == 1
	tls.handshake.type == 2
	ssdp
	
	Client Hello: (http.request or tls.handshake.type == 1) and !(ssdp) 
	Server Hello:(http.request or tls.handshake.type == 2) and !(ssdp)

	SEE DECRYPTING HTTPS
		


NICE MENUS: 
	"Tools --> Credentials" Wireshark (v3.1 and later)

How to extract HTTP and FTP files from Wireshark *. pcap file
	Open the .pcap file in Wireshark.
	Navigate to File -> Export Objects -> HTTP...
	File list would pop-up and you can save the desired files.












	
	
	
