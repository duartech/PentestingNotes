List of verbs: https://learn.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands?view=powershell-7.3&viewFallbackFrom=powershell-7
Windows powershell saves all previous commands into a file called ConsoleHost_history. This is located at %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt

Previous History of commands: Get-Content -Path 'C:\Users\dark\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt'

Get-Help <command> -Examples
Get-Command gets all the cmdlets installed on the current Computer.

Listing the directories and just selecting the mode and the name: C:\Users\ckdua> Get-ChildItem | Select-Object -Property Mode, Name
	Flags: 
		first - gets the first x object
		last - gets the last x object
		unique - shows the unique objects
		skip - skips x objects

Filtering Objects:
	Verb-Noun | Where-Object -Property <PropertyName> -<operator> >Value>
	C:\Users\ckdua> Get-Service | Where-Object -Property Status -eq Stopped

	Verb-Noun | Where-Object {$_.PropertyName -operator Value}
		"$_" iterates through every object that was passed.

	Operators: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/where-object?view=powershell-7.3&viewFallbackFrom=powershell-6
		Contains
		EQ
		GT


Sort: C:\Users\ckdua> Get-ChildItem | Sort-Object

Search for a file: Get-Childitem â€“Path C:\ -Include <file_name> -Recurse -ErrorAction SilentlyContinue
Search in a file: Get-ChildItem C:\* -Recurse | Select-String -pattern <stringToLookFor>


Count Objects: <Get-Command> | Measure-Object
	Get-Command | Where-Object -Property CommandType -eq Cmdlet | Measure-Object

Request to web-server: Invoke-WebRequest

Decode a file: C:/ certutil.exe -decode <file_to_be_decoded> <file_nameToStoreResult>

Read a file: Get-Content <fileName>

Get users: Get-LocalUser
	Get-LocalUser -SID "S-1-5-21-1394777289-3961777894-1791813945-501"

Users with their password required values set to False: Get-LocalUser | Where-Object -Property PasswordRequired -Match false

Get local groups: Get-LocalGroup

Get IP address: Get-NetIPAddress

Ports Listed as Listening: GEt-NetTCPConnection | Where-Object -Property State -Match Listen

Applied Patches: Get-Hotfix | measure

Running processes: Get-Process

Scheduled tasks: Get-ScheduleTask

Owner of C:\ : Get-Acl c:/

$variable_name = value



SCRIPTS SAMPLES:
$system_ports = Get-NetTCPConnection -State Listen
$text_port = Get-Content -Path C:\Users\Administrator\Desktop\ports.txt
foreach($port in $text_port){
    if($port -in $system_ports.LocalPort){
        echo $port
    }
}
======================
for($i=130; $i -le 140; $i++){
    Test-NetConnection localhost -Port $i
}
=========================
$path = "C:\Users\Administrator\Desktop\emails\*"
$string_pattern = "https://"
$command = Get-ChildItem -Path $path -Recurse | Select-String -Pattern $String_pattern echo $command
